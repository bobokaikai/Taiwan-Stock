{
  "version": 3,
  "sources": ["../../.pnpm/@tsparticles+interaction-external-bounce@3.3.0/node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js", "../../.pnpm/@tsparticles+interaction-external-bounce@3.3.0/node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js"],
  "sourcesContent": ["import { Circle, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach((item) => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === \"circle\"\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n", "import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, (p) => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, (p) => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AACA,IAAM,YAAY;AAAlB,IAAqB,OAAO;AAA5B,IAAiC,SAAS,KAAK,KAAK;AAApD,IAA0D,SAAS;AAAnE,IAAsE,kBAAkB;AAAxF,IAA4F,YAAY;AACxG,SAAS,cAAc,WAAW,UAAU,QAAQ,MAAM,WAAW;AACjE,QAAM,QAAQ,UAAU,UAAU,SAAS,MAAM,MAAM,SAAS;AAChE,aAAW,YAAY,OAAO;AAC1B,QAAI,gBAAgB,QAAQ;AACxB,mBAAa,6BAA6B,QAAQ,GAAG;AAAA,QACjD;AAAA,QACA;AAAA,QACA,MAAM,UAAU,YAAY;AAAA,QAC5B,UAAU,OAAO;AAAA,QACjB,QAAQ,OAAO;AAAA,MACnB,CAAC;AAAA,IACL,WACS,gBAAgB,WAAW;AAChC,iBAAW,UAAU,gBAAgB,UAAU,MAAM,CAAC;AAAA,IAC1D;AAAA,EACJ;AACJ;AACA,SAAS,qBAAqB,WAAW,UAAU,KAAK,UAAU;AAC9D,QAAM,QAAQ,SAAS,iBAAiB,QAAQ;AAChD,MAAI,CAAC,MAAM,QAAQ;AACf;AAAA,EACJ;AACA,QAAM,QAAQ,CAAC,SAAS;AACpB,UAAM,OAAO,MAAM,UAAU,UAAU,OAAO,YAAY,MAAM;AAAA,MAC5D,IAAI,KAAK,aAAa,KAAK,cAAc,QAAQ;AAAA,MACjD,IAAI,KAAK,YAAY,KAAK,eAAe,QAAQ;AAAA,IACrD,GAAG,SAAS,KAAK,cAAc,OAAO,SAAS,YAAY,kBAAkB,SAAS,OAAO,IAAI,SAAS,WACpG,IAAI,OAAO,IAAI,GAAG,IAAI,GAAG,SAAS,SAAS,IAC3C,IAAI,UAAU,KAAK,aAAa,UAAU,WAAW,KAAK,YAAY,UAAU,WAAW,KAAK,cAAc,UAAU,YAAY,QAAQ,KAAK,eAAe,UAAU,YAAY,MAAM;AAClM,aAAS,KAAK,QAAQ,IAAI;AAAA,EAC9B,CAAC;AACL;AACO,SAAS,UAAU,WAAW,MAAMA,aAAY,WAAW;AAC9D,iBAAeA,aAAY,MAAM,CAAC,UAAU,QAAQ,qBAAqB,WAAW,UAAU,KAAK,CAAC,KAAK,QAAQ,SAAS,cAAc,WAAW,KAAK,QAAQ,MAAM,SAAS,CAAC,CAAC;AACrL;AACO,SAAS,YAAY,WAAW,WAAW;AAC9C,QAAM,UAAU,UAAU,OAAO,YAAY,YAAY,kBAAkB,SAAS,WAAW,UAAU,cAAc,MAAM,UAAU,SAAS,UAAU,OAAO;AACjK,MAAI,CAAC,UAAU,SAAS,aAAa,CAAC,UAAU;AAC5C;AAAA,EACJ;AACA,gBAAc,WAAW,UAAU,QAAQ,IAAI,OAAO,SAAS,GAAG,SAAS,GAAG,SAAS,SAAS,GAAG,SAAS;AAChH;;;ACxCA,IAAM,aAAa;AACZ,IAAM,UAAN,cAAsB,uBAAuB;AAAA,EAChD,YAAY,WAAW;AACnB,UAAM,SAAS;AAAA,EACnB;AAAA,EACA,QAAQ;AAAA,EACR;AAAA,EACA,OAAO;AACH,UAAM,YAAY,KAAK,WAAW,SAAS,UAAU,cAAc,cAAc,MAAM;AACvF,QAAI,CAAC,QAAQ;AACT;AAAA,IACJ;AACA,cAAU,OAAO,qBAAqB,OAAO,WAAW,UAAU,OAAO;AAAA,EAC7E;AAAA,EACA,WAAW;AACP,UAAM,YAAY,KAAK,WAAW,UAAU,UAAU,eAAe,SAAS,QAAQ,cAAc,QAAQ,kBAAkB,UAAU,cAAc,WAAW,gBAAgB,eAAe,OAAO,QAAQ,QAAQ,YAAY,OAAO,QAAQ,MAAM,OAAO,OAAO;AACtQ,QAAI,mBAAmB,gBAAgB,UAAU,YAAY,SAAS,GAAG;AACrE,kBAAY,KAAK,WAAW,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC;AAAA,IACxD,OACK;AACD,gBAAU,KAAK,WAAW,MAAM,YAAY,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC;AAAA,IACxE;AAAA,EACJ;AAAA,EACA,UAAU,UAAU;AAChB,UAAM,YAAY,KAAK,WAAW,UAAU,UAAU,eAAe,QAAQ,UAAU,cAAc,OAAO,WAAU,qCAAU,kBAAiB,QAAQ,eAAe,QAAQ,OAAO,OAAO;AAC9L,WAAS,CAAC,CAAC,MAAM,YAAY,OAAO,QAAQ,UAAU,UAAU,YAAY,OAAO,QAAQ,IAAI,KAC3F,iBAAiB,YAAY,IAAI;AAAA,EACzC;AAAA,EACA,gBAAgB,YAAY,SAAS;AACjC,QAAI,CAAC,QAAQ,QAAQ;AACjB,cAAQ,SAAS,IAAI,OAAO;AAAA,IAChC;AACA,eAAW,UAAU,SAAS;AAC1B,cAAQ,OAAO,KAAK,iCAAQ,MAAM;AAAA,IACtC;AAAA,EACJ;AAAA,EACA,QAAQ;AAAA,EACR;AACJ;",
  "names": ["bounceMode"]
}
